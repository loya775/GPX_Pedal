digraph "main"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="main",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="pll_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_m_c_g_8c.html#af8e5a5c6d34e9fb3f80fc94b94708dcd"];
  Node0 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="GPIO_Initialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_button___init_8c.html#af2c14d08f5cd6da2843b09b5329c5731",tooltip="This Function inits all de GPIO that we were using in this project. "];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="GPIO_clockGating",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_g_p_i_o_8c.html#a621b0dc3536c64501a7a6c560b667355",tooltip="This function enables the GPIO clock by configuring the corresponding bit and register in the System ..."];
  Node2 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="GPIO_pinControlRegister",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_g_p_i_o_8c.html#ab7610a9d041c1c33f8a3fbf348bf80ef"];
  Node2 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="GPIO_dataDirectionPIN",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_g_p_i_o_8c.html#ab6dd1d7bf26b2a8127f5806288779dba",tooltip="This function configure specific pins of a GPIO port as input when 1 logic is written or output when ..."];
  Node0 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="DAC0_clockGating",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_d_a_c_8c.html#ae01fc5896a3ed6a8944c34adaaeadecb"];
  Node0 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="DAC0_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_d_a_c_8c.html#a396397a0f42d53d9f0942d118572017a"];
  Node0 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="ADC_initialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_a_d_c_driver_8c.html#a547eb8431e805a0df40daa803338b0e4",tooltip="It configures the initial values of SC1,SC2 and SC3 registers to specify modes of operation and other..."];
  Node8 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="ADC_clk",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_a_d_c_driver_8c.html#a5e68f8e9a0547cd2ca65fa6d8cb56aa5",tooltip="It enables the ADC clock gating depending on the ADCNoType. "];
  Node8 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="ADC_Configuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_a_d_c_driver_8c.html#ab5ac986bc568ea3d97dc0f01de08a5ac",tooltip="This function modifies the value of CFG1, CFG2 and CFG3 registers. "];
  Node8 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="ADC_StatusControl",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_a_d_c_driver_8c.html#ae325b07f360e967dd8a5d210aecc3020",tooltip="It configures the SC1,SC2 and SC3 registers to specify modes of operation and other specifications..."];
  Node0 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="FlexTimer_Init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_flex_timer_8c.html#afd28b15c859a54a6a5c2b2bf3b3ffbfa",tooltip="Initialize a Flex Timer and depends of the Configuration Type. "];
  Node12 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="FTM_MODE_Config",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_flex_timer_8c.html#aacf6d3281de97840cca6aab04489fcdd",tooltip="Initialize the value of a Flex Timer. "];
  Node0 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="UART_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_u_a_r_t_8c.html#af312cd24d880141abdd9c6bb99bd67c1",tooltip="It configures the UART to be used. "];
  Node0 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="UART0_interruptEnable",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_u_a_r_t_8c.html#a4209eb4659ab4ef5d7d6a88fef304e51",tooltip="enables the RX UART interrupt). This function should include the next sentence: while (!(UART0_S1 & U..."];
  Node0 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="NVIC_enableInterruptAndPriotity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_n_v_i_c_8c.html#a1a4e74e5f147d23a9070d864c4f20606",tooltip="This function enables a IRQ in the NVIC and establishes its priority. "];
  Node0 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="SPI_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_s_p_i_8c.html#aa72983bdb1bcfc055cea98c7501cc930"];
  Node17 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="SPI_clk",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_s_p_i_8c.html#ac1a921d11fb32aca89e0125fabebf57b"];
  Node17 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="SPI_enable",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_s_p_i_8c.html#aa8569eff93c8e6e683029aead54bc3ba"];
  Node17 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="SPI_setMaster",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_s_p_i_8c.html#af719801cd186b9fb20bf73526e0ed5d4"];
  Node17 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="SPI_fIFO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_s_p_i_8c.html#adc37d6ef8ffc0a20c3798a89c75b85f6"];
  Node17 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="SPI_clockPolarity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_s_p_i_8c.html#af5744b76088520e4d616d70a67fa9374"];
  Node17 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="SPI_frameSize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_s_p_i_8c.html#a2b22692d4029ec6e2b80042ebf7d23b0"];
  Node17 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="SPI_clockPhase",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_s_p_i_8c.html#aa554c5eb0689247229572608adfee916"];
  Node17 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="SPI_baudRate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_s_p_i_8c.html#a65386870aac220d021ad3a0a7a89236a"];
  Node17 -> Node26 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="SPI_mSBFirst",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_s_p_i_8c.html#a36b8131ffc4c516faec0458252e5abf2"];
  Node17 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="SPI_CSInactiveState",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_s_p_i_8c.html#aa6b2a69f915af12367ea520c8a1589e0"];
  Node17 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="SPI_setSlave",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_s_p_i_8c.html#af381cfe41df8f7b6e1a8e9db2f3ef7e9",tooltip="Configuracion adicional del SPI en modo esclavo. "];
  Node17 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="GPIO_setPIN",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_g_p_i_o_8c.html#acb526ef87a32ac98905b39a88c04a928",tooltip="This set an specific pin in a GPIO port. "];
  Node17 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node30 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="initSampleArray",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_sound_f_x_8c.html#ab86fb19d66ec42dfa1ec95b4181b64b1",tooltip="It initializes the circular buffer with 0 to avoid referencing garbage. "];
  Node0 -> Node31 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="initSampleCounter",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_sound_f_x_8c.html#aa970f5f51212dc67eb1f7bc04c6c7fd3",tooltip="It initializes the counter used to fill the buffer for the first time. "];
  Node0 -> Node32 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="FirstMenu",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_write_console_8c.html#ad38dc59a6f7a64288fb468dde2f10178",tooltip="This function Prints in Tera Term The Menu of the proyect. "];
  Node32 -> Node33 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="UART_putString",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_u_a_r_t_8c.html#af95ee594ce5f1619abbe4f2393b1903e",tooltip="It sends a string character through the serial port. "];
  Node33 -> Node34 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="UART_putChar",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_u_a_r_t_8c.html#ae69fe2846b6410c22876356a9b3f0083",tooltip="It sends one character through the serial port. This function should include the next sentence: while..."];
  Node0 -> Node35 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="GPIO_readPIN",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_g_p_i_o_8c.html#a8728d9577b431bb9b7978e57626028dd",tooltip="This function reads a specific GPIO pin. "];
  Node0 -> Node36 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="delay",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_global_functions_8c.html#aa7fa622ced5687f8351d589e9402b251"];
  Node36 -> Node36 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="choose_function",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_function_rotate_8c.html#add134482d83591a3c9b822febaeae4f6",tooltip="This Function prints the menu to choose function and give you the option to choose. "];
  Node0 -> Node38 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="LooperActivated",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_function_rotate_8c.html#a320c424fed00118ff52b314e3f65fe7c",tooltip="This Function Generate a Looper in the A0 pin. "];
  Node38 -> Node39 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="getFlexFlag",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_flex_timer_8c.html#abfa7f9344108e422b6324bf6318a455e",tooltip="This function give you the Value of the FlexFlag to see if is Activated or Disactivated. "];
  Node38 -> Node40 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="S25FLXXX_readByte",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_s25_f_l_x_x_x_8c.html#ac858e592d6d22c4345a58f6fbb088093"];
  Node40 -> Node41 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="GPIO_clearPIN",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_g_p_i_o_8c.html#a8e0195242968e9d04da390a9f40e88a3",tooltip="This clear an specific pin in a GPIO port. "];
  Node40 -> Node42 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="SPI_transfer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_s_p_i_8c.html#a5ad13ecfeda35016f18d06d2af95de60"];
  Node40 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 -> Node43 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="DAC0_write",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_d_a_c_8c.html#ae004e614b39c9c9953b32f2875822519"];
  Node0 -> Node44 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 [label="Dac_Working",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_function_rotate_8c.html#a5c154dc0edba3b1ca0243fc08ad1acf0",tooltip="This Function pass a value from the DAC to ADC and implement an effect. "];
  Node44 -> Node39 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 -> Node45 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="StartConversion",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_a_d_c_driver_8c.html#a51c3fc86aac41048469e3ded188c8430",tooltip="This function reads the ADC and returns the average value of n samples determined on the ADC Configur..."];
  Node44 -> Node46 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="setSampleArray",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_sound_f_x_8c.html#a464ee3601dde0004a0b02a5788eacd09",tooltip="It set the input sample and saves it in the circular buffer and it also refreshes the indexes involve..."];
  Node44 -> Node47 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="FXPercentage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_sound_f_x_8c.html#ab6fe20a65cc75c07bd97e1914b411ebc",tooltip="It selects the effect to be applied to the sample and it also modifies the parameters of the effect l..."];
  Node44 -> Node43 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 -> Node48 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 [label="clearFlexFlag",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_flex_timer_8c.html#afee146cf44f0b517d5c1d99b1093b84d",tooltip="This function clears the flag to take temperature value. "];
}
